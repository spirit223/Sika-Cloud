<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.sika.common.security.mapper.UserMapper">
    <insert id="addOneUser">
        INSERT INTO sys_user (username,
                              nick_name,
                              `password`,
                              `status`,
                              email,
                              phone_number,
                              sex,
                              char_head,
                              user_type,
                              create_by,
                              create_time,
                              update_by,
                              update_time,
                              del_flag)
        VALUES (#{username}, #{nickName},
                #{password}, #{status},
                #{email}, #{phoneNumber},
                #{sex}, #{charHead},
                #{userType}, #{createBy},
                #{createTime}, #{updateBy}, #{updateTime},
                #{delFlag})
    </insert>
    <insert id="addUserList">
        INSERT INTO sys_user (username,nick_name,
        `password`,`status`,
        email,phone_number,
        sex,char_head,
        user_type,create_by,
        create_time,update_by,
        update_time,del_flag)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.username}, #{item.nickName},
            #{item.password}, #{item.status},
            #{item.email}, #{item.phoneNumber},
            #{item.sex}, #{item.charHead},
            #{item.userType}, #{item.createBy},
            #{item.createTime}, #{item.updateBy},
            #{item.updateTime},#{item.delFlag})
        </foreach>
    </insert>
    <update id="updateUser">
        UPDATE sys_user
        <set>
            <if test="!''.equals(username)&amp;&amp;username != null">username = #{username},</if>
            <if test="!''.equals(nickName)&amp;&amp;nickName != null">nick_name = #{nickName},</if>
            <if test="!''.equals(password)&amp;&amp;password != null">`password` = #{password},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="''.equals(email) &amp;&amp; email != null">`email` = #{email},</if>
            <if test="''.equals(phoneNumber) &amp;&amp; phoneNumber != null">`phone_number` = #{phoneNumber},</if>
            <if test="sex != null">`sex` = #{sex},</if>
            <if test="!''.equals(charHead) &amp;&amp; charHead != null">`char_head` = #{charHead},</if>
            <if test="userType != null">`user_type` = #{userType},</if>
            <if test="updateBy != null">`update_by` = #{updateBy},</if>
            <if test="delFlag != null">`del_flag` = #{delFlag},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!--todo-->
    <update id="updateBatchUser"></update>

    <update id="deleteUserById">
        UPDATE sys_user
        SET `del_flag`  = 1,
            `status`    = 1,
            update_time = NOW()
        WHERE id = #{id}
    </update>
    <update id="deleteUserByList">
        UPDATE sys_user
        SET
        `del_flag` = 1,
        `status` = 1,
        update_time = NOW()
        WHERE
        id IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>
    <update id="updatePassword">
        UPDATE sys_user
        SET password = #{password}
        WHERE `id` = #{userId}
    </update>
    <delete id="truncateUserById">
        DELETE
        FROM sys_user
        WHERE id = #{id}
    </delete>
    <delete id="truncateUserBatch">
        DELETE FROM sys_user
        WHERE id IN
        <foreach collection="list" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
    </delete>
    <select id="getUserById" resultType="cc.sika.common.security.bean.po.User">
        SELECT id,
               username,
               nick_name,
               `password`,
               `status`,
               email,
               phone_number,
               sex,
               char_head,
               user_type,
               create_by,
               create_time,
               update_by,
               update_time,
               del_flag
        FROM sys_user
        WHERE id = #{id}
    </select>
    <select id="getUserByName" resultType="cc.sika.common.security.bean.po.User">
        SELECT id,
               username,
               nick_name,
               `password`,
               `status`,
               email,
               phone_number,
               sex,
               char_head,
               user_type,
               create_by,
               create_time,
               update_by,
               update_time,
               del_flag
        FROM sys_user
        WHERE username = #{name}
    </select>
    <select id="getUserByNickName" resultType="cc.sika.common.security.bean.po.User">
        SELECT id,
               username,
               nick_name,
               `password`,
               `status`,
               email,
               phone_number,
               sex,
               char_head,
               user_type,
               create_by,
               create_time,
               update_by,
               update_time,
               del_flag
        FROM sys_user
        WHERE nick_name = #{nickName}
    </select>
    <select id="getUserByStatus" resultType="cc.sika.common.security.bean.po.User">
        SELECT id,
               username,
               nick_name,
               `password`,
               `status`,
               email,
               phone_number,
               sex,
               char_head,
               user_type,
               create_by,
               create_time,
               update_by,
               update_time,
               del_flag
        FROM sys_user
        WHERE `status` = #{status}
    </select>
    <select id="getAllUser" resultType="cc.sika.common.security.bean.po.User">
        SELECT id,
               username,
               nick_name,
               `password`,
               `status`,
               email,
               phone_number,
               sex,
               char_head,
               user_type,
               create_by,
               create_time,
               update_by,
               update_time,
               del_flag
        FROM sys_user
    </select>
</mapper>