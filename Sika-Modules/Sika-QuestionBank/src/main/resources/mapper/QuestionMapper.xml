<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.sika.mapper.QuestionMapper">


    <!--********************** DML **********************-->
    <insert id="addQuestion" useGeneratedKeys="true" keyProperty="questionId">
        INSERT INTO question (question_type, question_content, question_image, question_description, answer_id,
                              question_topic)
        VALUES (#{questionType}, #{questionContent}, #{questionImage}, #{questionDescription}, #{answerId},
                #{questionTopic})
    </insert>
    <insert id="addQuestionList" parameterType="cc.sika.api.bean.po.Question" useGeneratedKeys="true"
            keyProperty="questionId">
        INSERT INTO question (question_type, question_content, question_image, question_description, answer_id,
        question_topic)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.questionType}, #{item.questionContent}, #{item.questionImage}, #{item.questionDescription},
            #{item.answerId},
            #{item.questionTopic})
        </foreach>
    </insert>

    <update id="updateQuestion" parameterType="cc.sika.api.bean.po.Question">
        UPDATE question
        SET question_type        = #{questionType},
            question_content     = #{questionContent},
            question_image       = #{questionImage},
            question_description = #{questionDescription},
            answer_id            = #{questionAnswer},
            question_topic       = #{questionTopic}
        WHERE id = #{questionId}
    </update>
    <update id="updateQueAnswer">
        UPDATE question
        SET answer_id = #{answerId}
        WHERE id = #{questionId}
    </update>

    <delete id="deleteQuestion" parameterType="_int">
        DELETE
        FROM question
        WHERE id = #{questionId}
    </delete>


    <!--********************** DQL **********************-->
    <select id="queryQuestionById" resultType="cc.sika.api.bean.po.Question">
        SELECT id,
               question_type,
               question_content,
               question_image,
               question_description,
               answer_id,
               question_topic
        FROM question
        WHERE id = #{questionId}
    </select>

    <select id="queryQuestionByTopic" resultType="cc.sika.api.bean.po.Question">
        SELECT id,
               question_type,
               question_content,
               question_image,
               question_description,
               answer_id,
               question_topic
        FROM question
        WHERE question_topic = #{topicName}
    </select>

    <select id="queryAllQuestion" resultType="cc.sika.api.bean.po.Question">
        SELECT id,
               question_type,
               question_content,
               question_image,
               question_description,
               answer_id,
               question_topic
        FROM question
    </select>
    <!--********************** MAP **********************-->
    <resultMap id="questionWithAnswerBOMap" type="cc.sika.api.bean.bo.QuestionWithAnswerBO">
        <result column="question_id" property="questionId"/>
        <result column="question_type" property="questionType"/>
        <result column="question_content" property="questionContent"/>
        <result column="question_image" property="questionImage"/>
        <result column="question_description" property="questionDescription"/>
        <result column="question_topic" property="questionTopic"/>
        <association property="answer" javaType="cc.sika.api.bean.po.Answer">
            <id column="answer_id" property="answerId"/>
            <result column="answer_content" property="answerContent"/>
            <result column="answer_image" property="answerImage"/>
        </association>
    </resultMap>


    <resultMap id="answerMap" type="cc.sika.api.bean.po.Answer">
        <id column="answer_id" property="answerId"/>
        <result column="answer_content" property="answerContent"/>
        <result column="answer_image" property="answerImage"/>
        <result column="question_id" property="qId"/>
    </resultMap>
    <!--********************** QA **********************-->
    <select id="queryQuesAndAnswer" resultMap="qaMap">
        SELECT q.id,
               q.question_type,
               q.question_content,
               q.question_image,
               q.question_description,
               q.question_topic,
               a.id,
               a.answer_content,
               a.answer_image,
               a.question_id
        FROM question q
                 LEFT JOIN answer a ON q.answer_id = a.id
        WHERE q.id = #{questionId}
    </select>

    <select id="queryQuesAndAnswerByTopic" resultMap="qaMap">
        SELECT
        q.id AS q_id,
        q.question_type AS q_type,
        q.question_content AS q_c,
        q.question_image AS q_i,
        q.question_description AS q_d,
        q.question_topic AS q_topic,
        a.id AS a_id
        FROM
        question q
        LEFT JOIN answer a ON q.answer_id = a.id
        <choose>
            <when test="''.equals(topicName)">
                WHERE
                q.question_topic IS NULL
            </when>
            <otherwise>
                WHERE
                q.question_topic = #{topicName}
            </otherwise>
        </choose>

    </select>

    <resultMap id="qaMap" type="cc.sika.api.bean.bo.QuestionWithAnswerBO">
        <id column="q_id" property="questionId"/>
        <result column="q_type" property="questionType"/>
        <result column="q_c" property="questionContent"/>
        <result column="q_i" property="questionImage" jdbcType="BLOB"/>
        <result column="q_d" property="questionDescription"/>
        <result column="q_topic" property="questionTopic"/>
        <association property="answer" column="a_id" javaType="cc.sika.api.bean.po.Answer" select="getAnswer"/>
    </resultMap>

    <select id="getAnswer" resultType="cc.sika.api.bean.po.Answer">
        SELECT id, answer_content, answer_image, question_id
        FROM answer
        WHERE id = #{a_id}
    </select>

    <resultMap id="aMap" type="cc.sika.api.bean.po.Answer">
        <id property="answerId" column="a_id"/>
        <result column="a_c" property="answerContent"/>
        <result column="a_i" property="answerImage" jdbcType="BLOB"/>
        <result column="a_q_id" property="qId"/>
    </resultMap>

    <select id="queryAllQuestionAndAnswer" resultMap="qaMap">
        SELECT q.id                   AS q_id,
               q.question_type        AS q_type,
               q.question_content     AS q_c,
               q.question_image       AS q_i,
               q.question_description AS q_d,
               q.question_topic       AS q_topic,
               a.id                   AS a_id
        FROM question q
                 LEFT JOIN answer a ON q.answer_id = a.id
    </select>

    <select id="getAllTopic" resultType="cc.sika.api.bean.dto.Topic">
        SELECT DISTINCT question_topic
        FROM question;
    </select>
    <select id="getQuestionAndAnswerByFuzzy" resultMap="qaMap">
        SELECT q.id,
               q.question_type,
               q.question_content,
               q.question_image,
               q.question_description,
               q.question_topic,
               a.id,
               a.answer_content,
               a.answer_image,
               a.question_id
        FROM question q
                 LEFT JOIN answer a ON q.answer_id = a.id
        WHERE q.question_content LIKE '%${fuzzy}%'
    </select>
    <select id="queryQuestionByContent" resultType="cc.sika.api.bean.po.Question">
        SELECT id,
               question_type,
               question_content,
               question_image,
               question_description,
               answer_id,
               question_topic
        FROM question
        WHERE question_content = #{questionContent}
    </select>
</mapper>